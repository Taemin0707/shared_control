<launch>
  # 시뮬레이션 환경에 놓인 로봇을 문답식으로 제어한다.
  # 로봇: Turtlebot3 waffle(gamma)
  # 제어방식: 공유제어, 키보드 awsd(motorimagery)와 23(eyeblink) 혹은 BCI

  # 파라미터 설정
  <arg name="robot_pose_x" value="1.11"/>
  <arg name="robot_pose_y" value="4.55"/>
  <arg name="robot_pose_Y" value="4.0"/>
  <arg name="robot_vel_lin" value="0.22"/>
  <arg name="robot_vel_ang" value="1.0"/>

  <arg name="environment" value="L8401"/>
  <arg name="node_radius" value="0.5"/>

  # 환경 시뮬레이션
  <node pkg="map_server" type="map_server" name="map_server" args="$(find shared_control)/map/$(arg environment).yaml"/>

  <include file="$(find shared_control)/launch/gazebo.launch">
    <arg name="robot_pose_x" value="$(arg robot_pose_x)"/>
    <arg name="robot_pose_y" value="$(arg robot_pose_y)"/>
    <arg name="robot_pose_Y" value="$(arg robot_pose_Y)"/>
    <arg name="environment" value="$(arg environment)"/>
    <arg name="gui" value="false"/>
  </include>

  # 공간구조 구축
  <node pkg="shared_control" type="spatial_info_manage.py" name="spatial_info_manager" output="screen">
    <param name="gvd_PM" value="5.0"/>
    <param name="gvd_BM" value="4.4"/>
    <param name="gvg_minimum_path_distance" value="0.5"/>
    <rosparam param="custom_edge_list_x1"> [1.2, 0.9, 0.9, 0.9, 0.9, 2.4, 2.4, 4.5, 4.5, 4.5, 4.5] </rosparam>
    <rosparam param="custom_edge_list_y1"> [1.5, 2.7, 2.7, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 2.7, 2.7] </rosparam>
    <rosparam param="custom_edge_list_x2"> [0.9, 1.5, 0.9, 0.75, 2.4, 2.4, 4.5, 4.95, 4.5, 4.5, 4.2] </rosparam>
    <rosparam param="custom_edge_list_y2"> [2.7, 2.7, 4.5, 5.1, 4.5, 5.1, 4.5, 4.95, 2.7, 2.1, 1.2] </rosparam>
  </node>

  # 이동로봇 제어
  <include file="$(find shared_control)/launch/navigation.launch">
    <arg name="robot_pose_x" value="$(arg robot_pose_x)"/>
    <arg name="robot_pose_y" value="$(arg robot_pose_y)"/>
    <arg name="robot_pose_Y" value="$(arg robot_pose_Y)"/>
  </include>

  <node pkg="shared_control" type="task_plan.py" name="task_planner" output="screen">
    <param name="robot_vel_lin" value="$(arg robot_vel_lin)"/>
    <param name="robot_vel_ang" value="$(arg robot_vel_ang)"/>
    <param name="node_radius" value="$(arg node_radius)"/>
  </node>

  # 인터페이스
  <node pkg="shared_control" type="interface.py" name="interfacer" output="screen"/>
  <node pkg="rviz" type="rviz" name="rviz" respawn="true"
        args="-d $(find shared_control)/rviz/shared_control.rviz"/>

</launch>
